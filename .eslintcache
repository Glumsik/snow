[{"D:\\game\\my-app\\src\\index.js":"1","D:\\game\\my-app\\src\\App.js":"2","D:\\game\\my-app\\src\\SnowBall\\SnowBall.js":"3","D:\\game\\my-app\\src\\SnowItem\\SnowItem.js":"4","D:\\game\\my-app\\src\\Gift\\Gift.js":"5"},{"size":274,"mtime":1608587645844,"results":"6","hashOfConfig":"7"},{"size":2531,"mtime":1608673321357,"results":"8","hashOfConfig":"7"},{"size":2237,"mtime":1608672434496,"results":"9","hashOfConfig":"7"},{"size":2393,"mtime":1608672467382,"results":"10","hashOfConfig":"7"},{"size":700,"mtime":1608675095412,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"vykb1c",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\game\\my-app\\src\\index.js",[],["25","26"],"D:\\game\\my-app\\src\\App.js",["27","28"],"D:\\game\\my-app\\src\\SnowBall\\SnowBall.js",["29","30","31","32"],"import \"./snowBall.css\";\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\n\r\nconst period = [\r\n  (n) => 0.05 * Math.sin(n),\r\n  (n) => 0.05 * Math.cos(n),\r\n  (n) => 0.05 * (Math.sin(n) * Math.cos(2 * n)),\r\n  (n) => 0.08 * (Math.sin(0.25 * n) - Math.cos(0.75 * n) + 1),\r\n  (n) => 0.05 * (Math.sin(0.75 * n) + Math.cos(0.25 * n) - 1),\r\n];\r\n\r\nfunction Graphic(props) {\r\n  return (\r\n    <span\r\n      style={{ transform: props.transform }}\r\n      className=\"snowflake\"\r\n      onClick={props.handleItem}\r\n      data-snow={props.snow}\r\n    >\r\n      ‚ùÑ\r\n    </span>\r\n  );\r\n}\r\n\r\nclass SnowBall extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      trans_x: null,\r\n      trans_y: null,\r\n      trans_z: null,\r\n    };\r\n    this.tick = this.tick.bind(this);\r\n    this.create = this.create.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.create();\r\n  }\r\n\r\n  create() {\r\n    let x = Math.random() * 100;\r\n    let y = 0;\r\n    let z = Math.random() < 0.9 ? Math.ceil(Math.random() * 100) + 25 : 0;\r\n    let life = Math.ceil(Math.random() * 4000) + 6000;\r\n    let orig = life;\r\n    let per = 4;\r\n\r\n    this.setState(\r\n      {\r\n        trans_x: x,\r\n        trans_y: y,\r\n        trans_z: z,\r\n        life: life,\r\n        origLife: orig,\r\n        periodfunction: per,\r\n      },\r\n      () => {\r\n        requestAnimationFrame(this.tick);\r\n      }\r\n    );\r\n  }\r\n\r\n  tick() {\r\n    const { trans_x, life, origLife, periodfunction } = this.state;\r\n\r\n    let curLife = life;\r\n    let dt = (origLife - curLife) / origLife;\r\n\r\n    if (dt <= 1.0) {\r\n      let y = 100 * dt;\r\n      let p = period[periodfunction];\r\n      let x = p(dt * 2 * Math.PI) + trans_x;\r\n\r\n      curLife -= 500 / 60;\r\n\r\n      this.setState({ trans_y: y, trans_x: x, life: curLife }, () => {\r\n        requestAnimationFrame(this.tick);\r\n      });\r\n    } else {\r\n      this.create();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Graphic\r\n        transform={`translate3d(${this.state.trans_x}vw, ${this.state.trans_y}vh, ${this.state.trans_z}px)`}\r\n        handleItem={this.props.handleItem}\r\n        snow={this.props.snow}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SnowBall;\r\n","D:\\game\\my-app\\src\\SnowItem\\SnowItem.js",["33","34","35","36"],"import \"./snowItem.css\";\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\n\r\nconst period = [\r\n  (n) => 0.05 * Math.sin(n),\r\n  (n) => 0.05 * Math.cos(n),\r\n  (n) => 0.05 * (Math.sin(n) * Math.cos(2 * n)),\r\n  (n) => 0.08 * (Math.sin(0.25 * n) - Math.cos(0.75 * n) + 1),\r\n  (n) => 0.05 * (Math.sin(0.75 * n) + Math.cos(0.25 * n) - 1),\r\n];\r\n\r\nconst fun = [\"‚õÑ\", \"üéÅ\", \"ü¶å\", \"üç™\"];\r\n\r\nfunction Graphic(props) {\r\n  return (\r\n    <span\r\n      style={{ transform: props.transform }}\r\n      className=\"snowflake\"\r\n      onClick={props.handleItem}\r\n    >\r\n      {props.icon}\r\n    </span>\r\n  );\r\n}\r\n\r\nclass SnowBall extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      trans_x: null,\r\n      trans_y: null,\r\n      trans_z: null,\r\n    };\r\n    this.tick = this.tick.bind(this);\r\n    this.create = this.create.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.create();\r\n  }\r\n\r\n  create() {\r\n    let x = Math.random() * 100;\r\n    let y = 0;\r\n    let z = Math.random() < 0.4 ? Math.ceil(Math.random() * 100) + 25 : 0;\r\n    let life = Math.ceil(Math.random() * 4000) + 6000;\r\n    let orig = life;\r\n    let per = Math.floor(Math.random() * period.length);\r\n    let snowItem = fun[Math.floor(Math.random() * fun.length)];\r\n    this.setState(\r\n      {\r\n        trans_x: x,\r\n        trans_y: y,\r\n        trans_z: z,\r\n        life: life,\r\n        origLife: orig,\r\n        periodfunction: per,\r\n        item: snowItem,\r\n      },\r\n      () => {\r\n        requestAnimationFrame(this.tick);\r\n      }\r\n    );\r\n  }\r\n\r\n  tick() {\r\n    const { trans_x, life, origLife, periodfunction } = this.state;\r\n\r\n    let curLife = life;\r\n    let dt = (origLife - curLife) / origLife;\r\n\r\n    if (dt <= 1.0) {\r\n      let y = 100 * dt;\r\n      let p = period[periodfunction];\r\n      let x = p(dt * 2 * Math.PI) + trans_x;\r\n\r\n      curLife -= 1000 / 60;\r\n\r\n      this.setState({ trans_y: y, trans_x: x, life: curLife }, () => {\r\n        requestAnimationFrame(this.tick);\r\n      });\r\n    } else {\r\n      this.create();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Graphic\r\n        transform={`translate3d(${this.state.trans_x}vw, ${this.state.trans_y}vh, ${this.state.trans_z}px)`}\r\n        icon={this.state.item}\r\n        handleItem={this.props.handleItem}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SnowBall;\r\n","D:\\game\\my-app\\src\\Gift\\Gift.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":45,"column":6,"nodeType":"43","endLine":45,"endColumn":8,"suggestions":"44"},{"ruleId":"45","severity":1,"message":"46","line":98,"column":11,"nodeType":"47","endLine":98,"endColumn":37},{"ruleId":"48","severity":1,"message":"49","line":2,"column":8,"nodeType":"50","messageId":"51","endLine":2,"endColumn":16},{"ruleId":"48","severity":1,"message":"52","line":4,"column":10,"nodeType":"50","messageId":"51","endLine":4,"endColumn":18},{"ruleId":"48","severity":1,"message":"53","line":4,"column":20,"nodeType":"50","messageId":"51","endLine":4,"endColumn":29},{"ruleId":"48","severity":1,"message":"54","line":4,"column":31,"nodeType":"50","messageId":"51","endLine":4,"endColumn":37},{"ruleId":"48","severity":1,"message":"49","line":2,"column":8,"nodeType":"50","messageId":"51","endLine":2,"endColumn":16},{"ruleId":"48","severity":1,"message":"52","line":4,"column":10,"nodeType":"50","messageId":"51","endLine":4,"endColumn":18},{"ruleId":"48","severity":1,"message":"53","line":4,"column":20,"nodeType":"50","messageId":"51","endLine":4,"endColumn":29},{"ruleId":"48","severity":1,"message":"54","line":4,"column":31,"nodeType":"50","messageId":"51","endLine":4,"endColumn":37},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addSnowBals' and 'count'. Either include them or remove the dependency array.","ArrayExpression",["57"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [addSnowBals, count]",{"range":"60","text":"61"},[1154,1156],"[addSnowBals, count]"]