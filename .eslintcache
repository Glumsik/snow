[{"D:\\game\\my-app\\src\\index.js":"1","D:\\game\\my-app\\src\\App.js":"2","D:\\game\\my-app\\src\\SnowBall\\SnowBall.js":"3","D:\\game\\my-app\\src\\SnowItem\\SnowItem.js":"4"},{"size":274,"mtime":1608587645844,"results":"5","hashOfConfig":"6"},{"size":1716,"mtime":1608587595969,"results":"7","hashOfConfig":"6"},{"size":2237,"mtime":1608587220981,"results":"8","hashOfConfig":"6"},{"size":2398,"mtime":1608501788358,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vykb1c",{"filePath":"12","messages":"13","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"17"},"D:\\game\\my-app\\src\\index.js",[],"D:\\game\\my-app\\src\\App.js",["21","22","23"],"D:\\game\\my-app\\src\\SnowBall\\SnowBall.js",["24","25","26","27"],"import \"./snowBall.css\";\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\n\r\nconst period = [\r\n  (n) => 0.05 * Math.sin(n),\r\n  (n) => 0.05 * Math.cos(n),\r\n  (n) => 0.05 * (Math.sin(n) * Math.cos(2 * n)),\r\n  (n) => 0.08 * (Math.sin(0.25 * n) - Math.cos(0.75 * n) + 1),\r\n  (n) => 0.05 * (Math.sin(0.75 * n) + Math.cos(0.25 * n) - 1),\r\n];\r\n\r\nfunction Graphic(props) {\r\n  return (\r\n    <span\r\n      style={{ transform: props.transform }}\r\n      className=\"snowflake\"\r\n      onClick={props.handleItem}\r\n      data-snow={props.snow}\r\n    >\r\n      ‚ùÑ\r\n    </span>\r\n  );\r\n}\r\n\r\nclass SnowBall extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      trans_x: null,\r\n      trans_y: null,\r\n      trans_z: null,\r\n    };\r\n    this.tick = this.tick.bind(this);\r\n    this.create = this.create.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.create();\r\n  }\r\n\r\n  create() {\r\n    let x = Math.random() * 100;\r\n    let y = 0;\r\n    let z = Math.random() < 0.9 ? Math.ceil(Math.random() * 100) + 25 : 0;\r\n    let life = Math.ceil(Math.random() * 4000) + 6000;\r\n    let orig = life;\r\n    let per = 4;\r\n\r\n    this.setState(\r\n      {\r\n        trans_x: x,\r\n        trans_y: y,\r\n        trans_z: z,\r\n        life: life,\r\n        origLife: orig,\r\n        periodfunction: per,\r\n      },\r\n      () => {\r\n        requestAnimationFrame(this.tick);\r\n      }\r\n    );\r\n  }\r\n\r\n  tick() {\r\n    const { trans_x, life, origLife, periodfunction } = this.state;\r\n\r\n    let curLife = life;\r\n    let dt = (origLife - curLife) / origLife;\r\n\r\n    if (dt <= 1.0) {\r\n      let y = 100 * dt;\r\n      let p = period[periodfunction];\r\n      let x = p(dt * 2 * Math.PI) + trans_x;\r\n\r\n      curLife -= 500 / 60;\r\n\r\n      this.setState({ trans_y: y, trans_x: x, life: curLife }, () => {\r\n        requestAnimationFrame(this.tick);\r\n      });\r\n    } else {\r\n      this.create();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Graphic\r\n        transform={`translate3d(${this.state.trans_x}vw, ${this.state.trans_y}vh, ${this.state.trans_z}px)`}\r\n        handleItem={this.props.handleItem}\r\n        snow={this.props.snow}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SnowBall;\r\n",["28","29"],"D:\\game\\my-app\\src\\SnowItem\\SnowItem.js",["30","31","32","33"],"import \"./snowItem.css\";\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\n\r\nconst period = [\r\n  (n) => 0.05 * Math.sin(n),\r\n  (n) => 0.05 * Math.cos(n),\r\n  (n) => 0.5 * (Math.sin(n) * Math.cos(2 * n)),\r\n  (n) => 0.08 * (Math.sin(0.25 * n) - Math.cos(0.75 * n) + 1),\r\n  (n) => 0.1 * (Math.sin(0.75 * n) + Math.cos(0.25 * n) - 1),\r\n];\r\n\r\nconst fun = [\"‚õÑ\", \"üéÅ\", \"ü¶å\", \"‚òÉ\", \"üç™\"];\r\n\r\nfunction Graphic(props) {\r\n  return (\r\n    <span\r\n      style={{ transform: props.transform }}\r\n      className=\"snowflake\"\r\n      onClick={props.handleItem}\r\n    >\r\n      {props.icon}\r\n    </span>\r\n  );\r\n}\r\n\r\nclass SnowBall extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      trans_x: null,\r\n      trans_y: null,\r\n      trans_z: null,\r\n    };\r\n    this.tick = this.tick.bind(this);\r\n    this.create = this.create.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.create();\r\n  }\r\n\r\n  create() {\r\n    let x = Math.random() * 100;\r\n    let y = 0;\r\n    let z = Math.random() < 0.4 ? Math.ceil(Math.random() * 100) + 25 : 0;\r\n    let life = Math.ceil(Math.random() * 4000) + 6000;\r\n    let orig = life;\r\n    let per = Math.floor(Math.random() * period.length);\r\n    let snowItem = fun[Math.floor(Math.random() * fun.length)];\r\n    this.setState(\r\n      {\r\n        trans_x: x,\r\n        trans_y: y,\r\n        trans_z: z,\r\n        life: life,\r\n        origLife: orig,\r\n        periodfunction: per,\r\n        item: snowItem,\r\n      },\r\n      () => {\r\n        requestAnimationFrame(this.tick);\r\n      }\r\n    );\r\n  }\r\n\r\n  tick() {\r\n    const { trans_x, life, origLife, periodfunction } = this.state;\r\n\r\n    let curLife = life;\r\n    let dt = (origLife - curLife) / origLife;\r\n\r\n    if (dt <= 1.0) {\r\n      let y = 100 * dt;\r\n      let p = period[periodfunction];\r\n      let x = p(dt * 2 * Math.PI) + trans_x;\r\n\r\n      curLife -= 1000 / 60;\r\n\r\n      this.setState({ trans_y: y, trans_x: x, life: curLife }, () => {\r\n        requestAnimationFrame(this.tick);\r\n      });\r\n    } else {\r\n      this.create();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Graphic\r\n        transform={`translate3d(${this.state.trans_x}vw, ${this.state.trans_y}vh, ${this.state.trans_z}px)`}\r\n        icon={this.state.item}\r\n        handleItem={this.props.handleItem}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SnowBall;\r\n",{"ruleId":"34","severity":1,"message":"35","line":3,"column":8,"nodeType":"36","messageId":"37","endLine":3,"endColumn":16},{"ruleId":"38","severity":1,"message":"39","line":40,"column":6,"nodeType":"40","endLine":40,"endColumn":8,"suggestions":"41"},{"ruleId":"42","severity":1,"message":"43","line":62,"column":11,"nodeType":"44","endLine":62,"endColumn":37},{"ruleId":"34","severity":1,"message":"45","line":2,"column":8,"nodeType":"36","messageId":"37","endLine":2,"endColumn":16},{"ruleId":"34","severity":1,"message":"46","line":4,"column":10,"nodeType":"36","messageId":"37","endLine":4,"endColumn":18},{"ruleId":"34","severity":1,"message":"47","line":4,"column":20,"nodeType":"36","messageId":"37","endLine":4,"endColumn":29},{"ruleId":"34","severity":1,"message":"48","line":4,"column":31,"nodeType":"36","messageId":"37","endLine":4,"endColumn":37},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"34","severity":1,"message":"45","line":2,"column":8,"nodeType":"36","messageId":"37","endLine":2,"endColumn":16},{"ruleId":"34","severity":1,"message":"46","line":4,"column":10,"nodeType":"36","messageId":"37","endLine":4,"endColumn":18},{"ruleId":"34","severity":1,"message":"47","line":4,"column":20,"nodeType":"36","messageId":"37","endLine":4,"endColumn":29},{"ruleId":"34","severity":1,"message":"48","line":4,"column":31,"nodeType":"36","messageId":"37","endLine":4,"endColumn":37},"no-unused-vars","'SnowItem' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addSnowBals' and 'count'. Either include them or remove the dependency array.","ArrayExpression",["53"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ReactDOM' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","no-native-reassign",["54"],"no-negated-in-lhs",["55"],{"desc":"56","fix":"57"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [addSnowBals, count]",{"range":"58","text":"59"},[1012,1014],"[addSnowBals, count]"]