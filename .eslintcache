[{"D:\\game\\my-app\\src\\index.js":"1","D:\\game\\my-app\\src\\App.js":"2","D:\\game\\my-app\\src\\SnowBall\\SnowBall.js":"3"},{"size":219,"mtime":1608313316562,"results":"4","hashOfConfig":"5"},{"size":562,"mtime":1608462647892,"results":"6","hashOfConfig":"5"},{"size":2590,"mtime":1608463416843,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1qug3xv",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"D:\\game\\my-app\\src\\index.js",[],["16","17"],"D:\\game\\my-app\\src\\App.js",[],"D:\\game\\my-app\\src\\SnowBall\\SnowBall.js",["18","19","20","21"],"import \"./snowBall.css\";\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\n\r\nconst period = [\r\n  (n) => 5 * Math.sin(n),\r\n  (n) => 8 * Math.cos(n),\r\n  (n) => 5 * (Math.sin(n) * Math.cos(2 * n)),\r\n  (n) => 2 * (Math.sin(0.25 * n) - Math.cos(0.75 * n) + 1),\r\n  (n) => 5 * (Math.sin(0.75 * n) + Math.cos(0.25 * n) - 1),\r\n];\r\n\r\nfunction Graphic(props) {\r\n  const spanEl = useRef(null);\r\n\r\n  const paint = () => {\r\n    const flake = spanEl.current;\r\n  };\r\n\r\n  useEffect(() => {\r\n    paint();\r\n  }, []);\r\n\r\n  return (\r\n    <span\r\n      ref={spanEl}\r\n      style={{ transform: props.transform }}\r\n      className=\"snowflake\"\r\n    >\r\n      ‚ùÑ\r\n    </span>\r\n  );\r\n}\r\n\r\nclass SnowBall extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      trans_x: null,\r\n      trans_y: null,\r\n      trans_z: null,\r\n    };\r\n    this.tick = this.tick.bind(this);\r\n    this.test = this.test.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.test();\r\n  }\r\n\r\n  test() {\r\n    let x = Math.random() * 100;\r\n    let y = 0;\r\n    let z = Math.random() < 0.1 ? Math.ceil(Math.random() * 100) + 25 : 0;\r\n    let l = Math.ceil(Math.random() * 4000) + 6000;\r\n    let orig = Math.ceil(Math.random() * 4000) + 6000;\r\n    let per = Math.floor(Math.random() * period.length);\r\n\r\n    this.setState(\r\n      {\r\n        trans_x: x,\r\n        trans_y: y,\r\n        trans_z: z,\r\n        life: l,\r\n        origlife: orig,\r\n        periodfunction: per,\r\n      },\r\n      () => {\r\n        console.log(this.state);\r\n        requestAnimationFrame(this.tick);\r\n      }\r\n    );\r\n  }\r\n\r\n  tick() {\r\n    const {\r\n      trans_x,\r\n      trans_y,\r\n      trans_z,\r\n      life,\r\n      origlife,\r\n      periodfunction,\r\n    } = this.state;\r\n\r\n    let y = trans_y + 0.2;\r\n    let orig = origlife;\r\n    let curLife = life;\r\n    let dt = (orig - curLife) / orig;\r\n    if (dt <= 1.5) {\r\n      let p = period[periodfunction];\r\n      let x = p(dt * 2 * Math.PI) + trans_x / 100;\r\n      console.log(dt);\r\n      curLife -= 1000 / 60;\r\n      this.setState({ trans_y: y, trans_x: x, life: curLife }, () =>\r\n        requestAnimationFrame(this.tick)\r\n      );\r\n    } else {\r\n      this.test();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"snowfall-container\"\r\n        aria-hidden=\"true\"\r\n        role=\"presentation\"\r\n      >\r\n        <Graphic\r\n          transform={`translate3d(${this.state.trans_x}vw, ${this.state.trans_y}vh, ${this.state.trans_z}px)`}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SnowBall;\r\n",{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":2,"column":8,"nodeType":"28","messageId":"29","endLine":2,"endColumn":16},{"ruleId":"26","severity":1,"message":"30","line":4,"column":10,"nodeType":"28","messageId":"29","endLine":4,"endColumn":18},{"ruleId":"26","severity":1,"message":"31","line":18,"column":11,"nodeType":"28","messageId":"29","endLine":18,"endColumn":16},{"ruleId":"26","severity":1,"message":"32","line":80,"column":7,"nodeType":"28","messageId":"29","endLine":80,"endColumn":14},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'flake' is assigned a value but never used.","'trans_z' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]